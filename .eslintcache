[{"D:\\itss-todo-app\\firebase-todo-app\\src\\index.js":"1","D:\\itss-todo-app\\firebase-todo-app\\src\\App.js":"2","D:\\itss-todo-app\\firebase-todo-app\\src\\reportWebVitals.js":"3","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Todo.js":"4","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\TodoItem.js":"5","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Input.js":"6","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Filter.js":"7","D:\\itss-todo-app\\firebase-todo-app\\src\\hooks\\customehook.js":"8","D:\\itss-todo-app\\firebase-todo-app\\src\\lib\\util.js":"9","D:\\itss-todo-app\\firebase-todo-app\\src\\lib\\firebase.js":"10","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Login.js":"11"},{"size":517,"mtime":1656435467505,"results":"12","hashOfConfig":"13"},{"size":2905,"mtime":1656437629571,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1656435467506,"results":"15","hashOfConfig":"13"},{"size":2084,"mtime":1656435467502,"results":"16","hashOfConfig":"13"},{"size":407,"mtime":1656435467503,"results":"17","hashOfConfig":"13"},{"size":602,"mtime":1656435467502,"results":"18","hashOfConfig":"13"},{"size":694,"mtime":1656435467502,"results":"19","hashOfConfig":"13"},{"size":1101,"mtime":1656437451653,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1656435467506,"results":"21","hashOfConfig":"13"},{"size":2956,"mtime":1656437562907,"results":"22","hashOfConfig":"13"},{"size":324,"mtime":1656436554742,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"wb7s9m",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\itss-todo-app\\firebase-todo-app\\src\\index.js",[],["52","53"],"D:\\itss-todo-app\\firebase-todo-app\\src\\App.js",[],"D:\\itss-todo-app\\firebase-todo-app\\src\\reportWebVitals.js",[],"D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Todo.js",["54","55","56"],"import React, { useState } from 'react';\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/customehook';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  // const [items, putItems, clearItems] = useStorage();\r\n  const [items, addItem, updateItem, clearItems] = useStorage();\r\n  \r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  \r\n  const handleCheck = checked => {\r\n    // const newItems = items.map(item => {\r\n    //   if (item.key === checked.key) {\r\n    //     item.done = !item.done;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // putItems(newItems);\r\n    updateItem(checked);\r\n  };\r\n  \r\n  const handleAdd = text => {\r\n    // putItems([...items, { key: getKey(), text, done: false }]);\r\n    addItem({ text, done: false });\r\n  };\r\n  \r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  return (\r\n    <article class=\"panel is-danger\">\r\n      <div className=\"panel-heading\">\r\n        <span class=\"icon-text\">\r\n          <span class=\"icon\">\r\n            <i class=\"fas fa-calendar-check\"></i>\r\n          </span>\r\n          <span> ITSS Todoアプリ</span>\r\n        </span>\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem \r\n          key={item.id}\r\n          item={item}\r\n          onCheck={handleCheck}\r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\TodoItem.js",[],"D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Input.js",["57"],"import React, { useState } from 'react';\r\n\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Filter.js",["58","59","60"],"function Filter({ value, onChange }) {\r\n\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\itss-todo-app\\firebase-todo-app\\src\\hooks\\customehook.js",["61"],"import { useState, useEffect } from 'react';\r\n\r\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\r\n\r\nfunction useStorage() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async item => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async checked => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes}\r\n      }\r\n      return item;\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  const clearItems = () => {\r\n    items.map(item => {\r\n      clearFirebaseItem(item);\r\n    })\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useStorage;","D:\\itss-todo-app\\firebase-todo-app\\src\\lib\\util.js",[],"D:\\itss-todo-app\\firebase-todo-app\\src\\lib\\firebase.js",["62"],"import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst path = \"todos\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDFwbDcLYuu5yjhx4zq07dbi-0fdr_jJEQ\",\r\n  authDomain: \"fir-sample-98402.firebaseapp.com\",\r\n  projectId: \"fir-sample-98402\",\r\n  storageBucket: \"fir-sample-98402.appspot.com\",\r\n  messagingSenderId: \"804132541397\",\r\n  appId: \"1:804132541397:web:10982368510f88894da35c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authorize = firebase.auth();\r\nexport default firebase;\r\n\r\nexport const getFirebaseItems = async () => {\r\n  try {\r\n    const snapshot = await firebase.firestore()\r\n      .collection(\"todos\")\r\n      .get();\r\n    const items = snapshot.docs.map(\r\n      (doc) => ({ ...doc.data(), id: doc.id })\r\n    );\r\n    return items;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const addFirebaseItem = async (item) => {\r\n  try {\r\n    const todoRef = firebase.firestore().collection(\"todos\");\r\n    await todoRef.add(item);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const updateFirebaseItem = async (item, id) => {\r\n  try {\r\n    const todoRef = firebase.firestore().collection(\"todos\").doc(id);\r\n    await todoRef.update(item);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const clearFirebaseItem = async (item) => {\r\n  const todoRef = firebase.firestore().collection(\"todos\").doc(item.id);\r\n  await todoRef.delete().then(function () {\r\n  }).catch(function (err) {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nexport const uiConfig = {\r\n  signInFlow: 'popup',\r\n  signInSuccessUrl: \"/\",\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  ],\r\n}\r\n\r\nexport const uploadImage = async (image) => {\r\n  const ref = firebase.storage().ref().child(`/images/${image.name}`);\r\n  let url = \"\";\r\n  try {\r\n      await ref.put(image);\r\n      url = await ref.getDownloadURL();\r\n  } catch (err) {\r\n      console.log(err);\r\n  }\r\n  return url;\r\n};\r\n\r\n\r\nexport const storeUser = async (user) => {\r\n  const { uid } = user;\r\n  const userDoc = await firebase.firestore().collection(\"users\").doc(uid).get();\r\n  if (!userDoc.exists) {\r\n      await firebase.firestore().collection(\"users\").doc(uid).set({ name: user.displayName });\r\n      return {\r\n          name: user.displayName,\r\n          avatar: \"\",\r\n          id: uid,\r\n      };\r\n  } else {\r\n      return {\r\n          id: uid,\r\n          ...userDoc.data(),\r\n      };\r\n  }\r\n}\r\n\r\nexport const updateAvatar = async (user, image) => {\r\n  try {\r\n      const userDoc = await firebase.firestore().collection(\"users\").doc(user.id).get();\r\n      if (userDoc.exists) {\r\n          await firebase.firestore().collection(\"users\").doc(user.id).update({ ...userDoc.data(), avatar: image });\r\n          return {\r\n              ...user,\r\n              avatar: image\r\n          }\r\n      }\r\nreturn {\r\n  err: true\r\n}\r\n  } catch (err) {\r\n  return {\r\n      err: true\r\n  }\r\n}\r\n}","D:\\itss-todo-app\\firebase-todo-app\\src\\components\\Login.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":12,"column":9,"nodeType":"69","messageId":"70","endLine":12,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":20,"column":42,"nodeType":"74","messageId":"75","endLine":20,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":10,"column":7,"nodeType":"78","endLine":14,"endColumn":8},{"ruleId":"76","severity":1,"message":"77","line":15,"column":7,"nodeType":"78","endLine":19,"endColumn":8},{"ruleId":"76","severity":1,"message":"77","line":20,"column":7,"nodeType":"78","endLine":24,"endColumn":8},{"ruleId":"72","severity":1,"message":"79","line":36,"column":20,"nodeType":"74","messageId":"80","endLine":36,"endColumn":22},{"ruleId":"67","severity":1,"message":"81","line":5,"column":7,"nodeType":"69","messageId":"70","endLine":5,"endColumn":11},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]